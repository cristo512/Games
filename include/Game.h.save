#ifndef GAME_H
#define GAME_H

#include <SFML/Graphics.hpp>
#include "gameState.h"
#include "Menu.h"
#include "Volleyball.h"

class Game
{
public:
    Game();
    ~Game();
	void Run();
	sf::Event event;
	bool keyPressed[sf::Keyboard::End];
	bool isKeyReleased(sf::Keyboard::Key key);
    sf::RenderWindow window;
	float scaling_variable;
	float scale_variableX;
	float scale_variableY;
	float scale(float x);
	float average(float x, float y);
	gameState *State;
	float clamp(const float &what, const float& a, const float& b);
	float delta;
	float lastUpdateTime;
	float accumulator;
	const float timeStep = 0.016;
	const float maxAccumulatedTime = 1.0;
	sf::Clock clock;
	virtual bool onMouseOver(sf::Sprite &sprite);
	virtual bool onMouseOver(sf::Text &text);
	virtual bool onCollision(sf::Sprite &sprite1, sf::Sprite &sprite2);

protected:
    void setScale_Variable();
};

extern Game* globalGame;

#endif // GAME_H
